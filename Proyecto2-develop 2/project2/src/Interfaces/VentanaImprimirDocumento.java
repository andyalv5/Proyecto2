/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import static Interfaces.VentanaPrincipal.monticuloMin;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import project2.Funciones;
import project2.Hash_table;
import project2.ListaDoc;
import project2.MonticuloMin;
import project2.NodoArbol;
import project2.NodoUsers;
import project2.NodoDoc;
import project2.Users;


/**
 *
 * @author Jose
 */
public class VentanaImprimirDocumento extends javax.swing.JFrame {
    
    public Users carpetaDoc;
    public Users DocumList;
    public Timer t;
    public int dias;
    public int horas;
    public int minutos;
    public int segundos;
    private ActionListener action =new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            segundos++;
            if(segundos==60){
                segundos=0;
                minutos++;
            }
            if(minutos==60){
                minutos=0;
                horas++;
            }
            if(horas==24){
                horas=0;
                dias++;
            }
            actualizar();
        }
    };

    private VentanaImprimirDocumento() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    private void actualizar(){
        String time="Dias: "+dias+" Horas: "+ (horas<=9?"0":"")+horas +" Minutos: "+ (minutos<=9?"0":"")+minutos +" Segundos: "+ (segundos<=9?"0":"")+segundos;
        this.reloj.setText(time);
                
    }
    /**
     * Creates new form VentanaImprimirDocumento
     * @param dias
     * @param horas
     * @param minutos
     * @param segundos
     */
    public VentanaImprimirDocumento(int dias,int horas,int minutos,int segundos) {
        
        
        t=new Timer(1000,action);
        t.start();
        this.dias=dias;
        this.horas=horas;
        this.minutos=minutos;
        this.segundos=segundos;
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.setLocationRelativeTo(null);
        
        Funciones fun =new Funciones();
        File f=new File("test//new.csv");
        Users listaUser=fun.Leer_csv(f);
        String usuarios =listaUser.returnUsers();
        String[] user = usuarios.split(",");
        User.setModel(new javax.swing.DefaultComboBoxModel(user));
        DocumList = VentanaAgregarUsuario.enviar();
        carpetaDoc = VentanaAgregarUsuario.enviar();
        
        documento.setEnabled(true);
        NodoUsers Nodo=this.DocumList.BuscarUser(User.getSelectedItem().toString());
        String selection="";
        if(Nodo.getDocuments()!=null){
            NodoDoc aux=Nodo.getDocuments().getpFirst();
            while(aux!=null){
                selection+= aux.getNombre()+",";
                aux=aux.getpNext();
            }
        }
        String[] toSel =selection.split(",");
        documento.setModel(new javax.swing.DefaultComboBoxModel(toSel));
        
    }

    public void sendUserList(Users usuario){
        
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        User = new javax.swing.JComboBox<>();
        documento = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        reloj = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Enviar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        User.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                UserItemStateChanged(evt);
            }
        });
        User.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserActionPerformed(evt);
            }
        });

        documento.setEnabled(false);
        documento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                documentoActionPerformed(evt);
            }
        });

        jLabel3.setText("NOMBRE DEL DOCUMENTO:");

        jLabel4.setText("ID USUARIO:");

        jLabel1.setText("ENVIAR A LA COLA DE IMPRESION");

        reloj.setBackground(new java.awt.Color(204, 204, 204));
        reloj.setFont(new java.awt.Font("Monaco", 0, 13)); // NOI18N
        reloj.setText("00:00:00:00");
        reloj.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.black, java.awt.Color.black)), "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 13))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(100, 100, 100))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(documento, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(User, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(reloj)))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(reloj)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(User, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(documento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        Hash_table hashTab = VentanaPrincipal.enviarHashTable();
        Users lista = VentanaAgregarUsuario.enviar();
        
        String timeTagSt="";
        timeTagSt = ""+ this.dias+this.horas+this.minutos+this.segundos;
        int timeTag = Integer.parseInt(timeTagSt);
        
        
        NodoUsers usuario = lista.BuscarUser(User.getSelectedItem().toString());
        timeTag =usuario.checkPriority(usuario, timeTag);
        NodoDoc document= usuario.BuscarDoc(documento.getSelectedItem().toString());
        hashTab.Insertar(User.getSelectedItem().toString(), timeTag, document);
        NodoArbol nodo=new NodoArbol(document,timeTag);
        ListaDoc listado=usuario.getDocuments();
        listado.delByName(documento.getSelectedItem().toString());
        carpetaDoc.BuscarUser(User.getSelectedItem().toString()).setDocuments(listado);
        
        monticuloMin.insertar(nodo);
        
        String selection="";
        if(usuario.getDocuments()!=null){
            NodoDoc aux=usuario.getDocuments().getpFirst();
            while(aux!=null){
                selection+= aux.getNombre()+",";
                aux=aux.getpNext();
            }
        }
        String[] toSel =selection.split(",");
        documento.setModel(new javax.swing.DefaultComboBoxModel(toSel));
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void UserItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_UserItemStateChanged
        documento.setEnabled(true);
        NodoUsers Nodo=this.DocumList.BuscarUser(User.getSelectedItem().toString());
        String selection="";
        if(Nodo.getDocuments()!=null){
            NodoDoc aux=Nodo.getDocuments().getpFirst();
            while(aux!=null){
                selection+= aux.getNombre()+",";
                aux=aux.getpNext();
            }
        }
        String[] toSel =selection.split(",");
        documento.setModel(new javax.swing.DefaultComboBoxModel(toSel));
    }//GEN-LAST:event_UserItemStateChanged

    private void UserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserActionPerformed

    }//GEN-LAST:event_UserActionPerformed

    private void documentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_documentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_documentoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaImprimirDocumento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaImprimirDocumento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaImprimirDocumento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaImprimirDocumento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaImprimirDocumento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> User;
    private javax.swing.JComboBox<String> documento;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel reloj;
    // End of variables declaration//GEN-END:variables
}
